{"version":3,"sources":["components/editor.jsx","components/preview.jsx","App.js","reportWebVitals.js","index.js"],"names":["rgbHex","require","palletToLinearGradient","pallet","map","part","opacity","console","log","rgbaWithOpacity","color","replace","offset","join","rgbToRgba","rgb","a","WrappedSketchPicker","onSelect","rest","onChange","c","r","g","b","initialPallet","Editor","onItemText","text","onItemImage","onItemColor","onItemURL","bannerURL","image","handlePresetMusk","handlePresetDress","handlePresetShoes","colorIsActive","setColorIsActive","setColorOverlayOnBack","colorOverlayOnBack","handlePresetDog","useState","open","setOpen","angle","setAngle","palette","setPalette","Grid","container","direction","justify","alignItems","className","Button","variant","onClick","_e","noValidate","autoComplete","style","width","item","TextField","id","label","margin","value","e","target","ButtonGroup","slice","type","hexToRgba","showAnglePicker","maxStops","paletteHeight","onPaletteChange","newPallete","ComponentToPrint","React","forwardRef","ref","window","background","zIndex","src","alt","Preview","handleClick","componentRef","useRef","StoryJSX","exportComponentAsPNG","renderToString","JSON","stringify","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","App","setText","setColor","setImage","setBannerURL","xs","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa02f897.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport hexToRgba from \"hex-to-rgba\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { GradientPickerPopover } from \"react-linear-gradient-picker\";\r\nimport \"./editor.css\";\r\n\r\nconst rgbHex = require(\"rgb-hex\");\r\n\r\nconst palletToLinearGradient = (pallet) => {\r\n  let result = pallet.map((part) => {\r\n    let opacity = part.opacity || 0.3;\r\n    console.log(part);\r\n    let colorString = part.color;\r\n    let rgba = colorString.replace(\"rgb\", \"rgba\");\r\n    let rgbaWithOpacity = rgba.replace(\")\", \",\" + opacity + \")\");\r\n    console.log(rgbaWithOpacity);\r\n    console.log(opacity);\r\n\r\n    return `${rgbaWithOpacity} ${part.offset * 100}%`;\r\n  });\r\n  return \"linear-gradient(0deg,\" + result.join(\", \") + \")\";\r\n};\r\n\r\nconst rgbToRgba = (rgb, a = 1) =>\r\n  rgb.replace(\"rgb(\", \"rgba(\").replace(\")\", `, ${a})`);\r\nconst WrappedSketchPicker = ({ onSelect, ...rest }) => {\r\n  return (\r\n    <SketchPicker\r\n      {...rest}\r\n      color={rgbToRgba(rest.color, rest.opacity)}\r\n      onChange={(c) => {\r\n        const { r, g, b, a } = c.rgb;\r\n        onSelect(`rgb(${r}, ${g}, ${b})`, a);\r\n      }}\r\n    />\r\n  );\r\n};\r\nconst initialPallet = [\r\n  { offset: \"0.00\", color: \"rgb(238, 241, 11)\" },\r\n  { offset: \"1.00\", color: \"rgb(126, 32, 207)\" },\r\n];\r\nconsole.log(palletToLinearGradient(initialPallet));\r\nconst Editor = ({\r\n  onItemText,\r\n  text,\r\n  onItemImage,\r\n  onItemColor,\r\n  onItemURL,\r\n  bannerURL,\r\n  image,\r\n  color,\r\n  handlePresetMusk,\r\n  handlePresetDress,\r\n  handlePresetShoes,\r\n  colorIsActive,\r\n  setColorIsActive,\r\n  setColorOverlayOnBack,\r\n  colorOverlayOnBack,\r\n  handlePresetDog,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [angle, setAngle] = useState(90);\r\n  const [palette, setPalette] = useState(initialPallet);\r\n\r\n  let handleShowColor = () => {\r\n    setColorIsActive(true);\r\n  };\r\n  let handleShowGradient = () => {\r\n    setColorIsActive(false);\r\n  };\r\n\r\n  let handleLayerFront = () => {\r\n    setColorOverlayOnBack(true);\r\n  };\r\n  let handleLayerBack = () => {\r\n    setColorOverlayOnBack(false);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      className=\"editorContanier\"\r\n    >\r\n      <div className=\"presetWrapper\">\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={(_e) => handlePresetMusk()}\r\n        >\r\n          Preset 1\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={(_e) => handlePresetShoes()}\r\n        >\r\n          Preset 2\r\n        </Button>\r\n\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={(_e) => handlePresetDress()}\r\n        >\r\n          Preset 3\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          onClick={(_e) => handlePresetDog()}\r\n        >\r\n          Preset 4\r\n        </Button>\r\n      </div>\r\n      <form noValidate autoComplete=\"off\" style={{ width: \"95%\" }}>\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"stretch\"\r\n          direction=\"column\"\r\n        >\r\n          <Grid item>\r\n            <TextField\r\n              className=\"editorInput\"\r\n              id=\"outlined-basic\"\r\n              label=\"Image URL/Data URI\"\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              value={image}\r\n              onChange={(e) => onItemImage(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              className=\"editorInput\"\r\n              id=\"outlined-basic\"\r\n              margin=\"dense\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={text}\r\n              onChange={(e) => onItemText(e.target.value)}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <ButtonGroup color=\"primary\" className=\"editorButtonGroup\">\r\n              <Button\r\n                variant={colorIsActive ? \"contained\" : \"\"}\r\n                onClick={(e) => handleShowColor()}\r\n              >\r\n                Color\r\n              </Button>\r\n              <Button\r\n                variant={colorIsActive ? \"\" : \"contained\"}\r\n                onClick={(e) => handleShowGradient()}\r\n              >\r\n                Gradient\r\n              </Button>\r\n            </ButtonGroup>\r\n          </Grid>\r\n          <Grid item>\r\n            {colorIsActive ? (\r\n              <TextField\r\n                className=\"editorInput\"\r\n                id=\"outlined-basic\"\r\n                label=\"Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                value={\"#\" + rgbHex(color).slice(0, -2)}\r\n                type=\"color\"\r\n                onChange={(e) => onItemColor(hexToRgba(e.target.value, \"0.5\"))}\r\n              />\r\n            ) : (\r\n              <GradientPickerPopover\r\n                {...{\r\n                  open,\r\n                  setOpen,\r\n                  angle,\r\n                  setAngle,\r\n                  showAnglePicker: true,\r\n                  width: 220,\r\n                  maxStops: 3,\r\n                  paletteHeight: 32,\r\n                  palette,\r\n                  onPaletteChange: (newPallete) => {\r\n                    setPalette(newPallete);\r\n                    let color = palletToLinearGradient(newPallete);\r\n                    onItemColor(color);\r\n                    console.log(newPallete);\r\n                  },\r\n                }}\r\n              >\r\n                <WrappedSketchPicker />\r\n              </GradientPickerPopover>\r\n            )}\r\n          </Grid>\r\n          <Grid item>\r\n            <ButtonGroup color=\"primary\" className=\"editorButtonGroup\">\r\n              <Button\r\n                variant={colorOverlayOnBack ? \"contained\" : \"\"}\r\n                onClick={(e) => handleLayerFront()}\r\n              >\r\n                Color on Back\r\n              </Button>\r\n              <Button\r\n                variant={colorOverlayOnBack ? \"\" : \"contained\"}\r\n                onClick={(e) => handleLayerBack()}\r\n              >\r\n                Color on Front\r\n              </Button>\r\n            </ButtonGroup>\r\n            <TextField\r\n              className=\"editorInput\"\r\n              id=\"outlined-basic\"\r\n              label=\"Banner URL\"\r\n              margin=\"dense\"\r\n              value={bannerURL}\r\n              variant=\"outlined\"\r\n              onChange={(e) => onItemURL(e.target.value)}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { exportComponentAsPNG } from \"react-component-export-image\";\r\nimport { renderToString } from \"react-dom/server\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./preview.css\";\r\n\r\nconst ComponentToPrint = React.forwardRef(\r\n  ({ text, color, image, bannerURL, colorOverlayOnBack }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className=\"storyWrapper\"\r\n      onClick={(e) => window.open(bannerURL, \"_blank\")}\r\n    >\r\n      <div\r\n        style={{\r\n          background: color,\r\n          zIndex: colorOverlayOnBack ? \"1\" : \"3\",\r\n        }}\r\n        className=\"colorOverlay\"\r\n      />\r\n      <h1 className=\"storyHeadline\">{text}</h1>\r\n\r\n      <img src={image} alt=\"\" className=\"storyImage\" />\r\n    </div>\r\n  )\r\n);\r\n\r\nconst Preview = ({ text, color, image, bannerURL, colorOverlayOnBack }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const componentRef = useRef();\r\n  let StoryJSX = (\r\n    <ComponentToPrint\r\n      ref={componentRef}\r\n      text={text}\r\n      color={color}\r\n      image={image}\r\n      bannerURL={bannerURL}\r\n      colorOverlayOnBack={colorOverlayOnBack}\r\n    />\r\n  );\r\n  let copyHTML = () => renderToString(StoryJSX);\r\n\r\n  return (\r\n    <div className=\"previewWrapper\">\r\n      <div>\r\n        {StoryJSX}\r\n        <div className=\"presetWrapper\">\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            onClick={(e) => exportComponentAsPNG(componentRef)}\r\n          >\r\n            PNG\r\n          </Button>\r\n          <CopyToClipboard text={copyHTML()}>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={(e) => handleClick()}\r\n            >\r\n              HTML\r\n            </Button>\r\n          </CopyToClipboard>\r\n          <CopyToClipboard\r\n            text={JSON.stringify({ text, color, image, bannerURL })}\r\n          >\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              onClick={(e) => handleClick()}\r\n            >\r\n              JSON\r\n            </Button>\r\n          </CopyToClipboard>\r\n        </div>\r\n      </div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={() => setOpen(false)}\r\n        message=\"Copied to clipboard!\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./App.css\";\nimport Editor from \"./components/editor\";\nimport Preview from \"./components/preview\";\n// import carImage from \"./components/carImageDataURI\";\n\nfunction App() {\n  const [text, setText] = useState(\"Ждем ваш текст..\");\n  const [color, setColor] = useState(\n    \"linear-gradient(0deg, rgba(231, 235, 36, 0.5) 0%, rgba(134, 37, 216, 0.5) 100%)\"\n  );\n  const [image, setImage] = useState(\"https://i.imgur.com/2fKdXRY.png\");\n  const [bannerURL, setBannerURL] = useState(\"https://ya.ru/\");\n  const [colorIsActive, setColorIsActive] = useState(false);\n  const [colorOverlayOnBack, setColorOverlayOnBack] = useState(true);\n\n  let handlePresetMusk = () => {\n    setColorOverlayOnBack(true);\n    setColorIsActive(false);\n    setImage(\"https://i.imgur.com/TktGZ7x.png\");\n    setColor(\n      \"linear-gradient(0deg, rgb(57, 158, 152, 0.5) 0%, rgb(206, 58, 255, 0.5) 100%)\"\n    );\n    setText(\"Как тебе такое, Илон Маск?\");\n    setBannerURL(\"https://www.thebestdesigns.com/\");\n  };\n\n  let handlePresetShoes = () => {\n    setColorIsActive(true);\n    setImage(\"https://i.imgur.com/AELINWP.png\");\n    setColor(\"rgba(136, 39, 155, 0.5)\");\n    setText(\"Осенняя обувь\");\n    setBannerURL(\"https://unsplash.com/\");\n    setColorOverlayOnBack(false);\n  };\n\n  let handlePresetDress = () => {\n    setColorIsActive(false);\n    setImage(\"https://i.imgur.com/oJHnD4p.jpg\");\n    setColor(\n      \"linear-gradient(0deg, rgba(0, 0, 0, 0.7) 0%, rgba(255, 255, 255, 0.27) 100%)\"\n    );\n    setText(\"Купить платье для выпускного\");\n    setBannerURL(\"https://dribbble.com/shots\");\n    setColorOverlayOnBack(false);\n  };\n  let handlePresetDog = () => {\n    setColorIsActive(true);\n    setImage(\"https://i.imgur.com/Ii1Qv35.jpg\");\n    setColor(\"rgba(109, 108, 100, 0.5)\");\n    setText(\"Бультерьеры от заводчиков\");\n    setBannerURL(\"https://www.iconfinder.com/\");\n    setColorOverlayOnBack(false);\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"stretch\"\n      className=\"mainContainer\"\n    >\n      <Grid item xs={6}>\n        <Editor\n          text={text}\n          onItemText={(text) => setText(text)}\n          onItemColor={(color) => setColor(color)}\n          onItemImage={(image) => setImage(image)}\n          onItemURL={(url) => setBannerURL(url)}\n          bannerURL={bannerURL}\n          image={image}\n          color={color}\n          handlePresetMusk={handlePresetMusk}\n          handlePresetDress={handlePresetDress}\n          handlePresetShoes={handlePresetShoes}\n          handlePresetDog={handlePresetDog}\n          colorIsActive={colorIsActive}\n          setColorIsActive={setColorIsActive}\n          colorOverlayOnBack={colorOverlayOnBack}\n          setColorOverlayOnBack={setColorOverlayOnBack}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Preview\n          text={text}\n          color={color}\n          image={image}\n          bannerURL={bannerURL}\n          colorOverlayOnBack={colorOverlayOnBack}\n        />\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}